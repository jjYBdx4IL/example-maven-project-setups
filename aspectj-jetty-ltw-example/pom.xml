<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
        http://maven.apache.org/POM/4.0.0
            http://maven.apache.org/maven-v4_0_0.xsd
            ">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.github.jjYBdx4IL.maven.examples</groupId>
        <artifactId>github-maven-examples</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>aspectj-jetty-ltw-example</artifactId>

    <name>Maven Examples :: AspectJ Jetty LTW Example</name>
    
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.4.5.v20170502</version>
                <configuration>
                    <scanIntervalSeconds>1</scanIntervalSeconds>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>${project.artifactId}</artifactId>
                        <version>${project.version}</version>
                        <classifier>aop</classifier>
                    </dependency>
                </dependencies>
            </plugin>
            
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.1</version>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
                </executions>
                <configuration>
                    <argLine>-javaagent:${aspectjWeaverLocation} -Daj.weaving.verbose=true</argLine>
                    <forkMode>once</forkMode>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>com.github.jjYBdx4IL.aop</groupId>
                <artifactId>aspectj-ltw-maven-plugin</artifactId>
                <version>1.1-SNAPSHOT</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate-ltw-config</goal>
                            <goal>generate-maven-startup-config</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <aspectjWeaverVersion>1.9.2</aspectjWeaverVersion>
                </configuration>
            </plugin>
            
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <!-- the classes controlling the weaving process must be loaded in server context so we are
                    able to weave server classes like javax.servlet.GenericServlet. Normally, you'd have to make sure
                    to exclude them from the webapp so you don't end up with those classes being loaded by both class-
                    loaders, ie server and webapp classloader. In this example we simply changed the classloader
                    priority in jetty-env.xml to avoid this issue. -->
                    <execution>
                        <id>aop-jar</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>    
                        <configuration>
                            <classifier>aop</classifier>
                            <includes>
                                <include>**/*Aspect.class</include>
                                <include>**/Tx.class</include>
                                <include>**/aop.xml</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
        	<plugins>
        		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        		<plugin>
        			<groupId>org.eclipse.m2e</groupId>
        			<artifactId>lifecycle-mapping</artifactId>
        			<version>1.0.0</version>
        			<configuration>
        				<lifecycleMappingMetadata>
        					<pluginExecutions>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>
        									com.github.jjYBdx4IL.aop
        								</groupId>
        								<artifactId>
        									aspectj-ltw-maven-plugin
        								</artifactId>
        								<versionRange>
        									[1.0-SNAPSHOT,)
        								</versionRange>
        								<goals>
        									<goal>
        										generate-maven-startup-config
        									</goal>
        									<goal>
        										generate-ltw-config
        									</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<ignore></ignore>
        							</action>
        						</pluginExecution>
        					</pluginExecutions>
        				</lifecycleMappingMetadata>
        			</configuration>
        		</plugin>
        	</plugins>
        </pluginManagement>
    </build>
    
    <dependencies>
        <dependency>
            <groupId>com.github.jjYBdx4IL.aop</groupId>
            <artifactId>aspectj-ltw-configurator-api</artifactId>
            <version>1.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.8.10</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.8.10</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.jjYBdx4IL</groupId>
            <artifactId>github-test-utils</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.jjYBdx4IL</groupId>
            <artifactId>github-utils</artifactId>
            <version>1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.25</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.25</version>
        </dependency>
        <!-- necessary for Netbeans code completion in JSPs: -->
        <dependency>
            <groupId>javax.servlet.jsp.jstl</groupId>
            <artifactId>javax.servlet.jsp.jstl-api</artifactId>
            <version>1.2.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>javax.servlet.jsp.jstl</artifactId>
            <version>1.2.2</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

</project>

