<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://maven.apache.org/POM/4.0.0
            http://maven.apache.org/maven-v4_0_0.xsd
            ">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.github.jjYBdx4IL.maven.examples</groupId>
		<artifactId>github-maven-examples</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>

	<artifactId>maven-jnaerator-example</artifactId>

	<name>Maven Examples :: JNAerator example</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<fann.version>2.2.0</fann.version>
		<skipTests>true</skipTests>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.nativelibs4java</groupId>
			<artifactId>bridj</artifactId>
			<version>0.7.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20</version>
				<configuration>
					<argLine>-Djava.library.path=${project.build.directory}/native</argLine>
					<skipTests>${skipTests}</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<skip>${skipTests}</skip>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.googlecode.maven-download-plugin
										</groupId>
										<artifactId>
											download-maven-plugin
										</artifactId>
										<versionRange>
											[1.3.0,)
										</versionRange>
										<goals>
											<goal>wget</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.nativelibs4java
										</groupId>
										<artifactId>
											maven-jnaerator-plugin
										</artifactId>
										<versionRange>
											[0.12,)
										</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.5.0,)
										</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.8,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>NotLinuxBox</id>
			<activation>
				<os>
					<family>!unix</family>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>start-jetty-server</id>
								<phase>initialize</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo>Non-UNIX systems not supported.</echo>
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>20020829</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>LinuxBox</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<properties>
				<skipTests>false</skipTests>
			</properties>
			<build>
				<plugins>
					<!-- build native lib and create jar on linux systems -->
					<plugin>
						<groupId>com.googlecode.maven-download-plugin</groupId>
						<artifactId>download-maven-plugin</artifactId>
						<version>1.3.0</version>
						<executions>
							<execution>
								<goals>
									<goal>wget</goal>
								</goals>
								<phase>generate-sources</phase>
							</execution>
						</executions>
						<configuration>
							<url>https://sourceforge.net/projects/fann/files/fann/${fann.version}/FANN-${fann.version}-Source.zip/download</url>
							<outputFileName>fann.zip</outputFileName>
							<sha1>6f95232c018af7f62fb4c7e39d160771a867d6e7</sha1>
							<unpack>true</unpack>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.nativelibs4java</groupId>
						<artifactId>maven-jnaerator-plugin</artifactId>
						<version>0.12</version>
						<executions>
							<execution>
								<goals>
									<goal>generate</goal>
								</goals>
								<phase>generate-sources</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.5.0</version>
						<executions>
							<execution>
								<id>linux-native-build</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>generate-sources</phase>
								<configuration>
									<executable>${project.basedir}/linux-native-build.sh</executable>
									<arguments>
										<arg>${project.build.directory}/FANN-${fann.version}-Source</arg>
										<arg>${project.build.directory}/native</arg>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>

