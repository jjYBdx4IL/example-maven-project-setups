<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://maven.apache.org/POM/4.0.0
            http://maven.apache.org/maven-v4_0_0.xsd
            ">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.github.jjYBdx4IL.maven.examples</groupId>
        <artifactId>gwt-example-aggregator</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>gwt-example-dist</artifactId>
    <packaging>jar</packaging>
    <name>Maven Examples :: GWT Example :: Distribution</name>

    <properties>
        <src.artifactId>gwt-example-client</src.artifactId>
        <zip.artifact>${project.build.directory}/${project.artifactId}-${project.version}-bin.zip</zip.artifact>
        
        <!-- IT -->
        <jetty.port>80</jetty.port>
        <testUrl>http://localhost:${jetty.port}/sandbox.jsp</testUrl>
        <installDir>${project.build.directory}/install/${project.artifactId}</installDir>
        <h2db.mgmt.port>8083</h2db.mgmt.port>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>apache-jsp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>apache-jstl</artifactId>
            <scope>runtime</scope>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.github.jjYBdx4IL.aop</groupId>
            <artifactId>aspectj-tx-manager</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-jetty-http</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
        </dependency>                    

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
        </dependency>
        
        <!-- Runtime dependencies that need to be included in the generated binaries -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-jndi</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-start</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-jmx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-plus</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-deploy</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-http</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-continuation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-proxy</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty.websocket</groupId>
            <artifactId>websocket-server</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp.jstl</groupId>
            <artifactId>javax.servlet.jsp.jstl-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>
        
        <!-- https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception-in-j -->
        <dependency>
          <groupId>javax.xml.bind</groupId>
          <artifactId>jaxb-api</artifactId>
        </dependency>
        <dependency>
          <groupId>org.glassfish.jaxb</groupId>
          <artifactId>jaxb-runtime</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
        </dependency>
        
        <dependency>
            <groupId>com.github.jjYBdx4IL.maven.examples</groupId>
            <artifactId>gwt-example-client</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>com.github.jjYBdx4IL.maven.examples</groupId>
            <artifactId>gwt-example-server</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
            <type>war</type>
        </dependency>

        <dependency>
            <groupId>com.github.jjYBdx4IL.maven.examples</groupId>
            <artifactId>gwt-example-devel-it</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>com.github.jjYBdx4IL.utils</groupId>
            <artifactId>selenium-test-utils</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <configuration>
                            <target>
                                <!-- prepare distro -->
                                <mkdir dir="target/generated-resources/appassembler/jsw/daemon/temp" />
                                <mkdir dir="target/generated-resources/appassembler/jsw/daemon/apps" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>go-live</id>
                        <phase>deploy</phase>
                        <configuration>
                            <target>
                                <!-- go live! -->
                                <exec executable="bash" failonerror="true">
                                    <arg value="${basedir}/deploy2server.sh" />
                                    <arg value="${zip.artifact}" />
                                    <arg value="${project.artifactId}" />
                                    <arg value="${src.artifactId}" />
                                    <arg value="${deployment.sshacct}" />
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <descriptors>src/main/assembly/bin.xml</descriptors>
                    <finalName>${project.artifactId}-${project.version}</finalName>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!--<prependGroupId>true</prependGroupId>-->
                            <useRepositoryLayout>true</useRepositoryLayout>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <!-- https://maven.apache.org/shared/maven-archiver/index.html -->
                        <manifest>
                            <mainClass>com.github.jjYBdx4IL.maven.examples.gwt.server.EmbeddedMain</mainClass>
                            <addClasspath>true</addClasspath>
                            <classpathLayoutType>repository</classpathLayoutType>
                            <!--<classpathPrefix>lib/</classpathPrefix>-->
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <phase>integration-test</phase>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <sandbox.location>${testUrl}</sandbox.location>
                    </systemPropertyVariables>
                    <failIfNoTests>true</failIfNoTests>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>run-its</id>
            <activation>
                <property>
                    <name>skipITs</name>
                    <value>!true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-jetty-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <!-- unpack dist -->
                                        <delete dir="${installDir}" />
                                        <unzip src="${zip.artifact}" dest="${project.build.directory}/install" />
                                        
                                        <!-- shut down running server - just in case -->
                                        <exec executable="bash" dir="${installDir}" spawn="false" failonerror="true">
                                            <arg value="./autostart.sh" />
                                            <arg value="stop" />
                                        </exec>
                                        <waitfor maxwait="3" maxwaitunit="minute" checkevery="1000">
                                            <not>
                                                <socket server="localhost" port="${jetty.port}" />
                                            </not>
                                        </waitfor>

                                        <!-- ensure there is no server still running -->
                                        <fail>
                                            <condition>
                                                <socket server="localhost" port="${jetty.port}" />
                                            </condition>
                                        </fail>
                                        <exec executable="bash" dir="${installDir}" spawn="false" failonerror="true">
                                            <arg value="./autostart.sh" />
                                            <arg value="start" />
                                        </exec>
                                        <echo>Waiting for server to come up at port ${jetty.port}</echo>
                                        <waitfor maxwait="3" maxwaitunit="minute" checkevery="1000">
                                            <http url="${testUrl}" errorsBeginAt="300" />
                                        </waitfor>
                                        <echo>Waiting for h2 database frontend to come up at port ${h2db.mgmt.port}</echo>
                                        <waitfor maxwait="3" maxwaitunit="minute" checkevery="1000">
                                            <socket server="localhost" port="${h2db.mgmt.port}" />
                                        </waitfor>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>shutdown-jetty-server</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <exec executable="bash" dir="${installDir}" spawn="false" failonerror="true">
                                            <arg value="./autostart.sh" />
                                            <arg value="stop" />
                                        </exec>
                                        <fail>
                                            <condition>
                                                <socket server="localhost" port="${jetty.port}" />
                                            </condition>
                                        </fail>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>shutdown-jetty-server-preclean</id>
                                <phase>pre-clean</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
                                        <if>
                                            <available file="${installDir}/autostart.sh" />
                                            <then>
                                                <exec executable="bash" dir="${installDir}" spawn="false"
                                                    failonerror="true">
                                                    <arg value="./autostart.sh" />
                                                    <arg value="stop" />
                                                </exec>
                                            </then>
                                            <else></else>
                                        </if>
                                        <fail>
                                            <condition>
                                                <socket server="localhost" port="${jetty.port}" />
                                            </condition>
                                        </fail>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>ant-contrib</groupId>
                                <artifactId>ant-contrib</artifactId>
                                <version>20020829</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
