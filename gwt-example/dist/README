## assumptions

We have a dedicated web server machine running Debian 8. That host is called gruust.stream
in this example. The jetty instance will run as user 'web' on that machine.
We have SSH access to the web account on that machine.

The client is assumed to have bash available, together with the usual
Linux command line tools. Cygwin should be supported, too.

## allow port < 1024 access to regular user on web server machine:

apt-get install authbind
touch /etc/authbind/byport/80 /etc/authbind/byport/443
chmod 777 /etc/authbind/byport/80 /etc/authbind/byport/443

## start jetty on server start

Add this to /etc/rc.local (on debian based machines):

    for f in /home/web/*/autostart.sh; do
        su - web -c "$f start"
    done

## deploy update

mvn clean install
mvn antrun:run@go-live -Ddeployment.sshacct=web@gruust.stream

## database managment frontend

The server includes a database managment frontend that can be accessed using a web browser
by pointing it to http://localhost:8083. Redirect the port via:

    ssh -L 8083:localhost:8083 web@gruust.stream

Live backups can be done by issuing the sql statement "backup to data/db-backup-<date>.zip".

The managment frontend's main purpose is to be able to configure the server via database
entries, ie. not having to use a bunch of config files and thus having an easy one-stop
solution for backup of *everything*.

## JDK

The jdk is expected to be installed at /opt/jdk8 on the server. I have
also installed JCE (Java Cryptography Extension) for strong HTTPS support.

## HTTPS

Use letsencrypt certbot to get free https certs. Shut down the server before
you do that and use certbot's standalone method where it fires up its own
web server.

After that, change into /etc/letsencrypt/live/<your-domain> directory and do:

    export JAVA_HOME=/opt/jdk8
    export PATH=$JAVA_HOME/bin:$PATH
    rm -f jetty.pkcs12
    openssl pkcs12 -inkey privkey.pem -in cert.pem -export -out jetty.pkcs12 -passout pass:password
    rm -f keystore
    keytool -importkeystore -srckeystore jetty.pkcs12 -srcstoretype PKCS12 -destkeystore keystore -deststorepass password -srcstorepass password
    mv -f keystore /home/web/gwt-example-dist/data/.
    chown web.web /home/web/gwt-example-dist/data/keystore
    chmod 600 /home/web/gwt-example-dist/data/keystore

## INTEGRATION TESTS

The integration tests for this package require port 80. If you intend to run those tests on Linux,
you need to follow the authbind instructions above also on your development machine.
