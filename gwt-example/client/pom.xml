<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
        http://maven.apache.org/POM/4.0.0
            http://maven.apache.org/maven-v4_0_0.xsd
            ">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.github.jjYBdx4IL.maven.examples</groupId>
        <artifactId>gwt-example-aggregator</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    
    <artifactId>gwt-example-client</artifactId>
    <packaging>war</packaging>
    <name>Maven Examples :: GWT Example :: Client</name>
    
    <properties>
        <gwt.compile.user.agent/>
        <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
        <jetty.port>8080</jetty.port>
        <gwt.jetty.port>8888</gwt.jetty.port>
    </properties>
    
    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.css</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.3.0</version>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <url>https://developers.google.com/identity/images/signin-assets.zip</url>
                    <outputDirectory>${project.build.directory}/google-signin-assets</outputDirectory>
                    <targetDirectory>${project.build.directory}/google-signin-assets</targetDirectory>
                    <skipCache>false</skipCache>
                    <retries>2</retries>
                    <unpack>true</unpack>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach-test-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
                        
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>1.12</version>
                <configuration>
                    <excludes>
                        <exclude>**/gwt/sandbox/client/datagrid/**</exclude>
                        <exclude>/main/webapp/**.html</exclude>
                        <exclude>/main/webapp/**.jsp</exclude>
                    </excludes>
                    <organizationName>jjYBdx4IL</organizationName>
                    <inceptionYear>2017</inceptionYear>
                    <licenseName>apache_v2</licenseName>
                </configuration>
            </plugin>
            
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <generatedSourcesDirectory>${project.build.directory}/generated-sources/gwt</generatedSourcesDirectory>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.google.dagger</groupId>
                            <artifactId>dagger-compiler</artifactId>
                            <version>2.20</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
                
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skipITs>true</skipITs>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <packagingExcludes>**/*.cache.ttf,**/hosted.html,WEB-INF/</packagingExcludes>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-a-jar</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>make-a-test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>**/jetty.xml</exclude>
                        <exclude>**/log4j.xml</exclude>
                        <exclude>**/application-context.xml</exclude>
                        <exclude>**/application-properties.xml</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/${project.artifactId}-${project.version}.jar</file>
                                    <type>jar</type>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>gwt-maven-plugin</artifactId>
                    <version>${gwt.version}</version>
                    <configuration>
                        <runTarget>sandbox.jsp</runTarget>
                        <hostedWebapp>${webappDirectory}</hostedWebapp>
                    
                        <compileReport>${gwt.compileReport}</compileReport>
                        <logLevel>${gwt.logLevel}</logLevel>
                    
                        <mode>htmlunit</mode>
                        <timeOut>${gwt.timeout}</timeOut>

                        <i18nMessagesBundles>
                            <i18nMessagesBundle>com.github.jjYBdx4IL.maven.examples.gwt.sandbox.client.ClientMessages</i18nMessagesBundle>
                        </i18nMessagesBundles>
                    
                        <cssFiles>
                            <cssFile>com/github/jjYBdx4IL/maven/examples/gwt/sandbox/client/Style.css</cssFile>
                            <cssFile>com/github/jjYBdx4IL/maven/examples/gwt/sandbox/client/rpcdemo/Style.css</cssFile>
                            <cssFile>com/github/jjYBdx4IL/maven/examples/gwt/sandbox/client/shared/Style.css</cssFile>
                        </cssFiles>
                    
                        <copyWebapp>true</copyWebapp>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    
    <dependencies>
        <dependency>
            <groupId>com.github.jjYBdx4IL.gwt</groupId>
            <artifactId>gwt-graphics</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>gwt-example-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.dagger</groupId>
            <artifactId>dagger-gwt</artifactId>
            <version>2.20</version>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sksamuel.gwt</groupId>
            <artifactId>gwt-websockets</artifactId>
            <version>1.0.4</version>
        </dependency>
        
        <!-- allow using JPA model entities directly with GWT: -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <classifier>sources</classifier>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    
    <profiles>
        <profile>
            <id>gwt-compile</id>
            <activation>
                <property>
                    <name>nocompile</name>
                    <value>!true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>gwt-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <!-- everything's a special case: don't copy source files in dev mode or you won't
                                    have reliable browser reloads during gwt:run sessions -->
                                    <!--<goal>resources</goal>-->
                                    <goal>css</goal>
                                    <goal>i18n</goal>
                                    <goal>generateAsync</goal>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>gwt-nocompile</id>
            <activation>
                <property>
                    <name>nocompile</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>gwt-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>css</goal>
                                    <goal>i18n</goal>
                                    <goal>generateAsync</goal>
                                    <!--<goal>compile</goal>-->
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- here we start the GWT super dev mode without using the gwt-maven-plugin to have max control -->
        <!-- for some reason, explicitly calling exec:java gives a different dependency set than running via phase hook...
        atm this only works via phase hook -->
        <profile>
            <id>devmode</id>
            <activation>
                <property>
                    <name>devmode</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-cli</id>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <phase>generate-test-sources</phase>
                                <configuration>
                                    <mainClass>com.google.gwt.dev.DevMode</mainClass>
                                    <arguments>
                                        <argument>-gen</argument>
                                        <argument>${project.build.directory}/.generated</argument>
                                        <argument>-war</argument>
<!--                                         <argument>${project.build.directory}/classes</argument> -->
                                        <argument>${webappDirectory}</argument>
                                        <argument>-logLevel</argument>
<!--                                         <argument>INFO</argument> -->
                                        <argument>ALL</argument>
                                        <argument>-port</argument>
                                        <argument>${gwt.jetty.port}</argument>
                                        <argument>-codeServerPort</argument>
                                        <argument>9997</argument>
                                        <argument>-startupUrl</argument>
                                        <argument>sandbox.jsp</argument>
                                        <argument>-sourceLevel</argument>
                                        <argument>${maven.compiler.source}</argument>
<!--                                         <argument>javax.Persistence</argument> -->
                                        <argument>com.github.jjYBdx4IL.maven.examples.gwt.sandbox.Sandbox</argument>
                                    </arguments>
                                    <addResourcesToClasspath>true</addResourcesToClasspath>
                                    <additionalClasspathElements>
                                        <additionalClasspathElement>${project.basedir}/../api/src/main/java/</additionalClasspathElement>
                                        <additionalClasspathElement>${project.basedir}/../api/target/generated-sources/gwt/</additionalClasspathElement>
                                        <additionalClasspathElement>${project.basedir}/../api/target/generated-sources/annotations/</additionalClasspathElement>
                                        <additionalClasspathElement>${project.basedir}/src/main/java/</additionalClasspathElement>
                                        <additionalClasspathElement>${project.build.directory}/generated-sources/gwt/</additionalClasspathElement>
                                        <additionalClasspathElement>${project.build.directory}/generated-sources/annotations/</additionalClasspathElement>
                                    </additionalClasspathElements>
                                    <classpathScope>runtime</classpathScope>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <!-- https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception-in-j -->
                            <dependency>
                              <groupId>javax.xml.bind</groupId>
                              <artifactId>jaxb-api</artifactId>
                              <version>2.3.1</version>
                            </dependency>
                            <dependency>
                              <groupId>org.glassfish.jaxb</groupId>
                              <artifactId>jaxb-runtime</artifactId>
                              <version>2.3.1</version>
                            </dependency>
                            <dependency>
                                <groupId>javax.annotation</groupId>
                                <artifactId>javax.annotation-api</artifactId>
                                <version>1.3.1</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <!-- remove api jar from DevMode classpath, use source directly from api module instead -->
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>gwt-example-api</artifactId>
                    <version>${project.version}</version>
                    <scope>provided</scope>
                </dependency>
                
                <dependency>
                    <groupId>com.google.gwt</groupId>
                    <artifactId>gwt-dev</artifactId>
                    <version>${gwt.version}</version>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>com.google.gwt</groupId>
                    <artifactId>gwt-user</artifactId>
                    <version>${gwt.version}</version>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>javax.servlet</groupId>
                    <artifactId>javax.servlet-api</artifactId>
                    <version>3.1.0</version>
                </dependency>
                
                <dependency>
                    <groupId>org.hibernate.javax.persistence</groupId>
                    <artifactId>hibernate-jpa-2.1-api</artifactId>
                    <version>1.0.0.Final</version>
                    <classifier>sources</classifier>
                </dependency>
                <dependency>
                    <groupId>org.hibernate.javax.persistence</groupId>
                    <artifactId>hibernate-jpa-2.1-api</artifactId>
                    <version>1.0.0.Final</version>
                </dependency>
                
                <!-- https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception-in-j -->
                <dependency>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                    <version>2.3.1</version>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jaxb</groupId>
                    <artifactId>jaxb-runtime</artifactId>
                    <version>2.3.1</version>
                </dependency>
                <dependency>
                    <groupId>javax.annotation</groupId>
                    <artifactId>javax.annotation-api</artifactId>
                    <version>1.3.1</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

</project>
